package views

import (
	"scavenger/internal/alerts"
)

templ Alerts() {
{{ alertToasts := alerts.GetAlertsFromContext(ctx) }}
if len(alertToasts) > 0 {
  <div aria-live="polite" aria-atomic="true" class="position-relative">
	<div class="toast-container position-absolute top-0 start-50 translate-middle-x p-3">

	  for _, alert := range alertToasts {
		<div class="toast align-items-center" role="alert" aria-live="assertive" aria-atomic="true" data-bs-autohide="true" data-bs-delay="10000" autoshow>
		  <div class={"toast-header text-white bg-"+string(alert.Type)}>
			  switch alert.Type {
			  case alerts.AlertSuccess:
			    <strong class="me-auto">Успех</strong>
			  case alerts.AlertError:
			    <strong class="me-auto">Ошибка</strong>
			  case alerts.AlertWarning:
			    <strong class="me-auto">Предупреждение</strong>
			  case alerts.AlertInfo:
			    <strong class="me-auto">Уведомление</strong>
			  default:
			    <strong class="me-auto">Уведомление</strong>
			  }
			  <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
			</div>
			<div class="toast-body">
				{ alert.Message }
			</div>
		</div>

	  }

	</div>
</div>
}

}
